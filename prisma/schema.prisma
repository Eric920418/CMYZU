generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(cuid())
  name              String
  email             String             @unique
  password          String
  role              Role               @default(TEACHER)
  active            Boolean            @default(true)
  image             String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  alumni            Alumni[]
  annualReports     AnnualReport[]
  chatConversations ChatConversation[]
  liveUpdates       LiveUpdate[]
  news              News[]
  partnerSchools    PartnerSchool[]
  rankings          Ranking[]
  teacherPosts      TeacherPost[]
  teacherProfile    TeacherProfile?
  youtubeVideos     YouTubeVideo[]

  @@map("users")
}

model News {
  id          String    @id @default(cuid())
  title       String
  content     String
  excerpt     String?
  imageUrl    String?
  published   Boolean   @default(false)
  featured    Boolean   @default(false)
  views       Int       @default(0)
  authorId    String
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  contentEn   String?
  excerptEn   String?
  titleEn     String?
  author      User      @relation(fields: [authorId], references: [id])

  @@map("news")
}

model LiveUpdate {
  id        String             @id @default(cuid())
  title     String
  content   String
  priority  LiveUpdatePriority @default(MEDIUM)
  published Boolean            @default(false)
  tags      String[]           @default([])
  authorId  String
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  contentEn String?
  titleEn   String?
  author    User               @relation(fields: [authorId], references: [id])

  @@map("live_updates")
}

model FeaturedResource {
  id            String   @id @default(cuid())
  title         String
  description   String
  imageUrl      String?
  linkUrl       String?
  category      String
  bgColor       String   @default("bg-gradient-to-br from-blue-500 to-purple-600")
  order         Int      @default(0)
  enabled       Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  categoryEn    String?
  descriptionEn String?
  titleEn       String?

  @@map("featured_resources")
}

model Alumni {
  id             String   @id @default(cuid())
  name           String
  position       String
  description    String
  imageUrl       String?
  achievements   String[] @default([])
  isActive       Boolean  @default(true)
  authorId       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  achievementsEn String[] @default([])
  descriptionEn  String?
  nameEn         String?
  positionEn     String?
  author         User     @relation(fields: [authorId], references: [id])

  @@map("alumni")
}

model HeroContent {
  id              String   @id @default(cuid())
  locale          String   @unique
  titlePrefix     String   @default("YZU")
  titleMain       String
  subtitle        String
  backgroundImage String?
  gradientFrom    String   @default("amber-600")
  gradientTo      String   @default("white")
  glassEffect     Boolean  @default(true)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("hero_content")
}

model AnnualReport {
  id            String   @id @default(cuid())
  year          Int      @unique
  title         String
  titleEn       String?  // 英文版標題
  description   String?
  descriptionEn String?  // 英文版描述
  fileUrl       String
  fileName      String
  fileSize      Int?
  isActive      Boolean  @default(true)
  publishedAt   DateTime @default(now())
  authorId      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  author        User     @relation(fields: [authorId], references: [id])

  @@map("annual_reports")
}

model Ranking {
  id             String   @id @default(cuid())
  rank           String
  category       String
  subtitle       String?
  description    String?
  logoUrl        String?
  logoAlt        String?
  organization   String
  year           Int
  order          Int      @default(0)
  isActive       Boolean  @default(true)
  authorId       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  categoryEn     String?
  descriptionEn  String?
  organizationEn String?
  subtitleEn     String?
  author         User     @relation(fields: [authorId], references: [id])

  @@map("rankings")
}

model WorldMapStats {
  id         String   @id @default("main")
  schools    Int      @default(10)
  students   Int      @default(925)
  countries  Int      @default(8)
  continents Int      @default(4)
  updatedAt  DateTime @updatedAt

  @@map("worldmap_stats")
}

model PartnerSchool {
  id        String   @id @default(cuid())
  name      String
  students  Int      @default(0)
  flag      String
  latitude  Float
  longitude Float
  isActive  Boolean  @default(true)
  order     Int      @default(0)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  nameEn    String?
  author    User     @relation(fields: [authorId], references: [id])

  @@map("partner_schools")
}

model ChatConversation {
  id        String        @id @default(cuid())
  sessionId String?
  userId    String?
  title     String?
  isActive  Boolean       @default(true)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  user      User?         @relation(fields: [userId], references: [id])
  messages  ChatMessage[]

  @@map("chat_conversations")
}

model ChatMessage {
  id             String           @id @default(cuid())
  conversationId String
  role           ChatRole
  content        String
  timestamp      DateTime         @default(now())
  conversation   ChatConversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}

model TeacherPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  excerpt   String?
  content   String
  published Boolean  @default(false)
  featured  Boolean  @default(false)
  views     Int      @default(0)
  tags      String[] @default([])
  category  String?
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])

  @@map("teacher_posts")
}

model TeacherProfile {
  id            String   @id @default(cuid())
  userId        String   @unique
  displayName   String
  slug          String   @unique
  bio           String?
  avatar        String?
  coverImage    String?
  socialLinks   Json?
  showContact   Boolean  @default(true)
  showResearch  Boolean  @default(true)
  showPosts     Boolean  @default(true)
  email         String?
  phone         String?
  office        String?
  researchAreas String[] @default([])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])

  @@map("teacher_profiles")
}

model StatsContent {
  id                 String   @id @default("main")
  updatedAt          DateTime @updatedAt
  descriptionPart1En String   @default("To help students connect with the international workplace, we actively build an international environment with over 10% international students and growing.")
  descriptionPart1Zh String   @default("為幫助學生銜接國際職場，我們積極建構國際化環境，國際學生比例超過10%，並持續成長。")
  descriptionPart2En String   @default("We actively establish partnerships with overseas schools in Europe, America, Asia, and mainland China, expanding dual degrees, bridging degrees, and exchange student programs.")
  descriptionPart2Zh String   @default("與歐美、亞洲及大陸地區的海外學校積極建立合作關係，擴展雙聯學位、銜接學位及交換學生等，")
  descriptionPart3En String   @default("Currently we have partnerships with over 100 international schools, including prestigious institutions like University of Michigan, University of Minnesota, University of Essex, Nottingham Trent University, ESC Rennes Business School, Pforzheim University, and University of Queensland.")
  descriptionPart3Zh String   @default("目前已擁有超過100所以上的國外合作學校，知名學校包含:美國密西根大學、美國明尼蘇達大學、英國艾賽克斯大學、英國諾丁漢特倫特大學、法國雷恩商學院、德國佛茨海姆大學及澳洲昆士蘭大學等，")
  descriptionPart4En String   @default("Spanning nearly 30 countries worldwide, with over a thousand students having international exchange experience.")
  descriptionPart4Zh String   @default("遍佈全球近30個國家，多達千位以上學生具備國外交流經驗。")
  stat1En            String   @default("Only English Benchmark College in Northern Taiwan")
  stat1Zh            String   @default("北台灣唯一英語標竿學院")
  stat2En            String   @default("Most Popular EMBA by Enterprises")
  stat2Zh            String   @default("企業最愛EMBA")
  stat3En            String   @default("Featured Highlight")
  stat3Zh            String   @default("隨意highlight")
  stat4En            String   @default("Featured Highlight")
  stat4Zh            String   @default("隨意highlight")
  titleEn            String   @default("Global Business Education Leader")
  titleZh            String   @default("國際化商管教育領航者")

  @@map("stats_content")
}

model YouTubeVideo {
  id            String   @id @default(cuid())
  title         String
  titleEn       String?  // 英文版標題
  videoId       String?
  thumbnail     String
  duration      String
  views         Int      @default(0)
  url           String
  description   String?
  descriptionEn String?  // 英文版描述
  published     Boolean  @default(true)
  order         Int      @default(0)
  authorId      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  author        User     @relation(fields: [authorId], references: [id])

  @@map("youtube_videos")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

enum LiveUpdatePriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ChatRole {
  USER
  ASSISTANT
}
